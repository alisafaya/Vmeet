//
//  this script helps to remove the labels of vectors
//  from the files that made by word2vec
//  Created by ali safaya on 31/05/2017.
//

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

char input_file[100];
char output_file[100];
float value;
int words;
int size;

void EditFile(){
    FILE *fi, *fo;
    fi = fopen(input_file,"r");
    printf("Starting editing using input file %s and output file %s\n", input_file,output_file);
    if (fi == NULL) {
        printf("Input file not found\n");
        return;
    }
    fo = fopen(output_file,"w");
    if(fo == NULL){
        printf("Output file not found\n");
        return;
    }
    fscanf(fi,"%d",&words);
    fscanf(fi,"%d",&size);
    char a;
    for (int i = 0; i < words; i++) {
        while (1) {
            a = fgetc(fi);
            if (feof(fi) || a == ' ') break;
        }
        for (int j = 0;j < size; j++) {
            fscanf(fi,"%f",&value);
            
            if ((size - 1) == j)
                fprintf(fo,"%f",value);
            else
                fprintf(fo,"%f,",value);
        }
        fprintf(fo, "\n");
    }

    fclose(fi);
    fclose(fo);
}

int ArgPos(char *str, int argc, char **argv) {
    int a;
    for (a = 1; a < argc; a++) {
        if (!strcmp(str, argv[a])) {
            if (a == argc - 1) {
                printf("Argument missing for %s\n", str);
                exit(1);
            }
            return a;
        }
    }
    return -1;
}

int main(int argc, char ** argv) {
    int i;
    if (argc == 1) {
        printf("Vector file editing tool\n\n");
        printf("Parameters for this script:\n");
        printf("\t-input <file>\n");
        printf("\t\tUse vectors data from <file> to edit\n");
        printf("\t-output <file>\n");
        printf("\t\tUse <file> to save the vectors without their words\n");
        printf("\nExamples:\n");
        printf("./VectorFileEdit -input VectorWithLabels.txt -output justvectors.txt\n\n");
        return 0;
    }
    output_file[0] = 0;
    if ((i = ArgPos((char *)"-input", argc, argv)) > 0) 
        strcpy(input_file, argv[i + 1]);
    if ((i = ArgPos((char *)"-output", argc, argv)) > 0)
        strcpy(output_file, argv[i + 1]);

    EditFile();
    return 0;
}
